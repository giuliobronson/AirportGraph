Index: src/model/AirportDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\n\nimport server.Link;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\npublic class AirportDAO {\n    private Connection database;\n\n    public AirportDAO() throws SQLException {\n        this.database = (new Link(0)).connect();\n    }\n\n    public ResultSet selectAirports() throws SQLException {\n        String query = \"SELECT * FROM airport;\";\n        PreparedStatement command = database.prepareStatement(query);\n        return command.executeQuery();\n    }\n\n    public ResultSet selectAirport(String iata) throws SQLException {\n        String query = \"SELECT * FROM airport WHERE iata = ?\";\n        PreparedStatement command = database.prepareStatement(query);\n        command.setString(1, iata);\n        ResultSet result = command.executeQuery(); result.next();\n        return result;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/model/AirportDAO.java b/src/model/AirportDAO.java
--- a/src/model/AirportDAO.java	(revision b52a6dbbc4abd290a55848b8450b7cd303a21b33)
+++ b/src/model/AirportDAO.java	(date 1662489686524)
@@ -7,7 +7,7 @@
 import java.sql.SQLException;
 
 public class AirportDAO {
-    private Connection database;
+    private final Connection database;
 
     public AirportDAO() throws SQLException {
         this.database = (new Link(0)).connect();
@@ -19,11 +19,24 @@
         return command.executeQuery();
     }
 
-    public ResultSet selectAirport(String iata) throws SQLException {
+    public Airport selectAirport(String iata) throws SQLException {
         String query = "SELECT * FROM airport WHERE iata = ?";
         PreparedStatement command = database.prepareStatement(query);
         command.setString(1, iata);
         ResultSet result = command.executeQuery(); result.next();
-        return result;
+        return new Airport(result.getString("iata"),
+                result.getString("name"),
+                result.getString("city"),
+                result.getString("state"),
+                result.getDouble("latitud"),
+                result.getDouble("longitud"));
+    }
+
+    public ResultSet selectAirport(String city, String state) throws SQLException {
+        String query = "SELECT * FROM airport WHERE city = ? AND state = ?";
+        PreparedStatement command = database.prepareStatement(query);
+        command.setString(1, city);
+        command.setString(2, state);
+        return command.executeQuery();
     }
 }
Index: src/model/Airport.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\n\npublic class Airport {\n    private String iata, name, city, state;\n    private double latidud, longitud;\n\n    public Airport(String iata, String name, String city, String state, double latidud, double longitud) {\n        this.iata = iata;\n        this.name = name;\n        this.city = city;\n        this.state = state;\n        this.latidud = latidud;\n        this.longitud = longitud;\n    }\n\n    public String getIata() {\n        return iata;\n    }\n\n    public void setIata(String iata) {\n        this.iata = iata;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getCity() {\n        return city;\n    }\n\n    public void setCity(String city) {\n        this.city = city;\n    }\n\n    public String getState() {\n        return state;\n    }\n\n    public void setState(String state) {\n        this.state = state;\n    }\n\n    public double getLatidud() {\n        return latidud;\n    }\n\n    public void setLatidud(double latidud) {\n        this.latidud = latidud;\n    }\n\n    public double getLongitud() {\n        return longitud;\n    }\n\n    public void setLongitud(double longitud) {\n        this.longitud = longitud;\n    }\n\n    public double distanceTo(Airport airport) {\n        double dlon = airport.longitud - this.longitud;\n        double dlat = airport.latidud - this.latidud;\n        double tmp = Math.pow(Math.sin(dlat / 2), 2)\n                + Math.cos(this.latidud) * Math.cos(airport.latidud)\n                * Math.pow(Math.sin(dlon / 2), 2);\n\n        double theta = 2 * Math.asin(Math.sqrt(tmp));\n\n        double r = 6371;\n\n        return theta * r;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if(o == this) {\n            return true;\n        }\n        if(!(o instanceof Airport)) {\n            return false;\n        }\n        Airport airport = (Airport) o;\n        return this.iata.equals(airport.iata);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/model/Airport.java b/src/model/Airport.java
--- a/src/model/Airport.java	(revision b52a6dbbc4abd290a55848b8450b7cd303a21b33)
+++ b/src/model/Airport.java	(date 1662489695508)
@@ -1,5 +1,7 @@
 package model;
 
+import java.util.Objects;
+
 public class Airport {
     private String iata, name, city, state;
     private double latidud, longitud;
@@ -62,17 +64,14 @@
     }
 
     public double distanceTo(Airport airport) {
-        double dlon = airport.longitud - this.longitud;
-        double dlat = airport.latidud - this.latidud;
-        double tmp = Math.pow(Math.sin(dlat / 2), 2)
-                + Math.cos(this.latidud) * Math.cos(airport.latidud)
+        double R = 6371;
+        double dlon = (airport.longitud - this.longitud) * Math.PI / 180;
+        double dlat = (airport.latidud - this.latidud) * Math.PI / 180;
+        double a = Math.pow(Math.sin(dlat / 2), 2)
+                + Math.cos(this.latidud * Math.PI / 180) * Math.cos(airport.latidud * Math.PI / 180)
                 * Math.pow(Math.sin(dlon / 2), 2);
-
-        double theta = 2 * Math.asin(Math.sqrt(tmp));
-
-        double r = 6371;
-
-        return theta * r;
+        double c = 2 * Math.asin(Math.sqrt(a));
+        return c * R;
     }
 
     @Override
@@ -86,4 +85,9 @@
         Airport airport = (Airport) o;
         return this.iata.equals(airport.iata);
     }
+
+    @Override
+    public int hashCode() {
+        return Objects.hash(this.iata);
+    }
 }
Index: src/view/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package view;\n\nimport model.Airport;\nimport model.AirportDAO;\nimport model.Graph;\n\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) throws SQLException {\n        /*Cria um objeto aeroporto para cada instância da tabela*/\n        Graph<Airport> airportGraph = new Graph<>();\n        AirportDAO airportDAO = new AirportDAO();\n        ResultSet resultSet = airportDAO.selectAirports();\n        while (resultSet.next()) {\n            Airport airport = new Airport(resultSet.getString(\"iata\"),\n                    resultSet.getString(\"name\"),\n                    resultSet.getString(\"city\"),\n                    resultSet.getString(\"state\"),\n                    resultSet.getDouble(\"latitud\"),\n                    resultSet.getDouble(\"longitud\"));\n            airportGraph.addVertex(airport);\n        }\n\n        /*Gera um grafo completo*/\n        for(Airport origin : airportGraph.getVertexes()) {\n            for(Airport neighbor : airportGraph.getVertexes()) {\n                if(origin.equals(neighbor)) continue;\n                airportGraph.addEdge(origin, neighbor, origin.distanceTo(neighbor));\n            }\n        }\n\n        Airport airportOrigin = null, airportDestination = null;\n        for(Airport target : airportGraph.getVertexes()) {\n            if(target.getIata().equals(\"FOR\")) airportOrigin = target;\n            if(target.getIata().equals(\"GIG\")) airportDestination = target;\n        }\n\n        System.out.println(airportGraph.distance(airportOrigin, airportDestination));\n        HashMap<Airport, Airport> path = airportGraph.route(airportOrigin, airportDestination);\n        Airport tmp = path.getOrDefault(airportDestination, null);\n        System.out.print(airportDestination.getIata());\n        while(tmp != null) {\n            System.out.print(\" <- \" + tmp.getIata());\n            tmp = path.getOrDefault(tmp, null);\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/view/Main.java b/src/view/Main.java
--- a/src/view/Main.java	(revision b52a6dbbc4abd290a55848b8450b7cd303a21b33)
+++ b/src/view/Main.java	(date 1662489697528)
@@ -13,14 +13,14 @@
         /*Cria um objeto aeroporto para cada instância da tabela*/
         Graph<Airport> airportGraph = new Graph<>();
         AirportDAO airportDAO = new AirportDAO();
-        ResultSet resultSet = airportDAO.selectAirports();
-        while (resultSet.next()) {
-            Airport airport = new Airport(resultSet.getString("iata"),
-                    resultSet.getString("name"),
-                    resultSet.getString("city"),
-                    resultSet.getString("state"),
-                    resultSet.getDouble("latitud"),
-                    resultSet.getDouble("longitud"));
+        ResultSet airports = airportDAO.selectAirports();
+        while (airports.next()) {
+            Airport airport = new Airport(airports.getString("iata"),
+                    airports.getString("name"),
+                    airports.getString("city"),
+                    airports.getString("state"),
+                    airports.getDouble("latitud"),
+                    airports.getDouble("longitud"));
             airportGraph.addVertex(airport);
         }
 
@@ -32,11 +32,9 @@
             }
         }
 
-        Airport airportOrigin = null, airportDestination = null;
-        for(Airport target : airportGraph.getVertexes()) {
-            if(target.getIata().equals("FOR")) airportOrigin = target;
-            if(target.getIata().equals("GIG")) airportDestination = target;
-        }
+        /*Teste*/
+        Airport airportOrigin = airportDAO.selectAirport("GIG");
+        Airport airportDestination = airportDAO.selectAirport("CFB");
 
         System.out.println(airportGraph.distance(airportOrigin, airportDestination));
         HashMap<Airport, Airport> path = airportGraph.route(airportOrigin, airportDestination);
Index: src/view/Menu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/view/Menu.java b/src/view/Menu.java
new file mode 100644
--- /dev/null	(date 1662489697556)
+++ b/src/view/Menu.java	(date 1662489697556)
@@ -0,0 +1,12 @@
+package view;
+
+public class Menu {
+    private String origin;
+    private String destination;
+
+
+
+    public void show() {
+
+    }
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"40fab690-c843-4b20-be48-7e75a334332b\" name=\"Changes\" comment=\"Método de recuperar menor caminho\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/model/Airport.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/model/Airport.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/model/AirportDAO.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/model/AirportDAO.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/model/Graph.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/model/Graph.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/server/Link.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/server/Link.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/view/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/view/Main.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2DXo7HzHBZqgAvZLAUy1XQQWzp1\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/home/giuliobronson/comp/labprog/AirportGraph&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;Errors&quot;\n  }\n}</component>\n  <component name=\"RunManager\">\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"view.Main\" />\n      <module name=\"AirportGraph\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"view.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"40fab690-c843-4b20-be48-7e75a334332b\" name=\"Changes\" comment=\"\" />\n      <created>1660854621500</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1660854621500</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Método para recuperar menor rota\">\n      <created>1662413933518</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1662413933518</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Restrição de realizar conexões no menor caminho\">\n      <created>1662414553876</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1662414553876</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Método de recuperar menor caminho\">\n      <created>1662423940229</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1662423940229</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"4\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"airport_dao\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"RECENT_FILTERS\">\n      <map>\n        <entry key=\"Branch\">\n          <value>\n            <list>\n              <RecentGroup>\n                <option name=\"FILTER_VALUES\">\n                  <option value=\"airport_dao\" />\n                </option>\n              </RecentGroup>\n              <RecentGroup>\n                <option name=\"FILTER_VALUES\">\n                  <option value=\"master\" />\n                </option>\n              </RecentGroup>\n              <RecentGroup>\n                <option name=\"FILTER_VALUES\">\n                  <option value=\"graph\" />\n                </option>\n              </RecentGroup>\n              <RecentGroup>\n                <option name=\"FILTER_VALUES\">\n                  <option value=\"HEAD\" />\n                </option>\n              </RecentGroup>\n              <RecentGroup>\n                <option name=\"FILTER_VALUES\">\n                  <option value=\"origin/master\" />\n                </option>\n              </RecentGroup>\n            </list>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Primeiro commit\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Primeiro commit\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.sql.SQLException\" package=\"java.sql\" />\n          <option name=\"timeStamp\" value=\"1\" />\n        </breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/model/Graph.java</url>\n          <line>87</line>\n          <properties>\n            <option name=\"lambda-ordinal\" value=\"-1\" />\n          </properties>\n          <option name=\"timeStamp\" value=\"7\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b52a6dbbc4abd290a55848b8450b7cd303a21b33)
+++ b/.idea/workspace.xml	(date 1662489698952)
@@ -2,11 +2,10 @@
 <project version="4">
   <component name="ChangeListManager">
     <list default="true" id="40fab690-c843-4b20-be48-7e75a334332b" name="Changes" comment="Método de recuperar menor caminho">
+      <change afterPath="$PROJECT_DIR$/src/view/Menu.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/model/Airport.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/Airport.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/model/AirportDAO.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/AirportDAO.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/model/Graph.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/Graph.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/server/Link.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/server/Link.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/view/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/view/Main.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -33,18 +32,18 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;/home/giuliobronson/comp/labprog/AirportGraph&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;Errors&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "last_opened_file_path": "/home/giuliobronson/comp/labprog/AirportGraph",
+    "project.structure.last.edited": "Modules",
+    "project.structure.proportion": "0.0",
+    "project.structure.side.proportion": "0.0",
+    "settings.editor.selected.configurable": "preferences.lookFeel"
   }
-}</component>
+}]]></component>
   <component name="RunManager">
     <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="view.Main" />
@@ -95,7 +94,14 @@
       <option name="project" value="LOCAL" />
       <updated>1662423940229</updated>
     </task>
-    <option name="localTasksCounter" value="4" />
+    <task id="LOCAL-00004" summary="Método de recuperar menor caminho">
+      <created>1662430672125</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1662430672125</updated>
+    </task>
+    <option name="localTasksCounter" value="5" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -158,7 +164,8 @@
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Primeiro commit" />
-    <option name="LAST_COMMIT_MESSAGE" value="Primeiro commit" />
+    <MESSAGE value="Método de recuperar menor caminho" />
+    <option name="LAST_COMMIT_MESSAGE" value="Método de recuperar menor caminho" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
@@ -167,14 +174,6 @@
           <properties class="java.sql.SQLException" package="java.sql" />
           <option name="timeStamp" value="1" />
         </breakpoint>
-        <line-breakpoint enabled="true" type="java-line">
-          <url>file://$PROJECT_DIR$/src/model/Graph.java</url>
-          <line>87</line>
-          <properties>
-            <option name="lambda-ordinal" value="-1" />
-          </properties>
-          <option name="timeStamp" value="7" />
-        </line-breakpoint>
       </breakpoints>
     </breakpoint-manager>
   </component>
